/**
 * Copyright (c) 2015-present, Zippy Technologies
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

@import './variables.scss';

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS} {
  box-sizing: border-box;
  overflow: auto;
  position: relative;
  min-height: 60px;
  max-height: 100%;
  flex: 1 1 auto;
  align-self: stretch;
  outline: none;

  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  &--collapsed,
  &--collapsing,
  &--expanding {
    overflow: hidden;
  }

  &--resizing {
    &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}--orientation-horizontal {
      cursor: row-resize;
    }

    &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}--orientation-vertical {
      cursor: col-resize;
    }
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__side {
  background: white;
  position: relative;
  overflow: auto;
  width: 100%;

  &--orientation-vertical {
    min-height: 100%;
    height: 100%; // was recently added because chrome started not showing the vertical scrollbar when content was overflowing

    &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__side--collapsed {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      z-index: -1;
    }
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__side--fill {
  overflow: hidden;
  display: flex;
  flex-flow: column;
  max-height: 100%; // needed for IE/Firefox in order to not extend the Side beyond the available container space - since items could be a lot bigger
  max-width: 100%; // needed for IE/Firefox in order to not extend the Side beyond the available container space - since items could be a lot bigger
  & > :first-child {
    flex: 1 1 0;
    -ms-flex: 1 1 0;
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__side--collapsed {
  visibility: hidden;

  &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__side--orientation-horizontal {
    max-width: 100%;
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter,
.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__resize-proxy {
  background: rgb(215, 215, 215);
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter {
  flex-shrink: 0;
  user-select: none;
  overflow: hidden;

  &-dragger {
    user-select: none;
    position: absolute;
    z-index: 1;
  }

  &--orientation-horizontal {
    min-width: 100%;
    height: 12px;

    &:not(.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--locked) {
      &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed-start {
        cursor: s-resize;
        cursor: pointer;
      }

      &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed-end {
        cursor: n-resize;
        cursor: pointer;
      }
    }
  }

  &--orientation-horizontal.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--draggable:not(.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--locked):not(.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed) {
    cursor: row-resize;
  }

  &--orientation-vertical {
    position: relative;
    width: 12px;
    min-height: 100%;

    &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed-start {
      cursor: e-resize;
      cursor: pointer;
    }

    &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed-end {
      cursor: w-resize;
      cursor: pointer;
    }
  }

  &--orientation-vertical.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--draggable:not(.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--locked):not(.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter--collapsed) {
    cursor: col-resize;
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner {
  cursor: pointer;
  position: relative;
  max-width: 100%;
  overflow: hidden;
  z-index: 2;
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--orientation-vertical {
  padding: 3px 1px;

  &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--first {
    cursor: w-resize;
    cursor: pointer;
  }

  &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--second {
    cursor: e-resize;
    cursor: pointer;
  }
}

.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--orientation-horizontal {
  padding: 1px 3px;

  &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--first {
    cursor: n-resize;
    cursor: pointer;
  }

  &.#{$ZIPPY_SPLIT_CONTAINER_ROOT_CLASS}__splitter-inner--second {
    cursor: s-resize;
    cursor: pointer;
  }
}

@import '../../Flex/style/index.scss';
